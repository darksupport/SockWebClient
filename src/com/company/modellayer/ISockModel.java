
package com.company.modellayer;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 * 
 */
@WebService(name = "ISockModel", targetNamespace = "http://ModelLayer.company.com/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface ISockModel {


    /**
     * 
     * @param arg2
     * @param arg1
     * @param arg0
     * @return
     *     returns java.util.List<com.company.modellayer.SockData>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getSockByCondition", targetNamespace = "http://ModelLayer.company.com/", className = "com.company.modellayer.GetSockByCondition")
    @ResponseWrapper(localName = "getSockByConditionResponse", targetNamespace = "http://ModelLayer.company.com/", className = "com.company.modellayer.GetSockByConditionResponse")
    @Action(input = "http://ModelLayer.company.com/ISockModel/getSockByConditionRequest", output = "http://ModelLayer.company.com/ISockModel/getSockByConditionResponse")
    public List<SockData> getSockByCondition(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        String arg1,
        @WebParam(name = "arg2", targetNamespace = "")
        String arg2);

    /**
     * 
     * @param arg0
     * @return
     *     returns com.company.modellayer.SockData
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "updateSock", targetNamespace = "http://ModelLayer.company.com/", className = "com.company.modellayer.UpdateSock")
    @ResponseWrapper(localName = "updateSockResponse", targetNamespace = "http://ModelLayer.company.com/", className = "com.company.modellayer.UpdateSockResponse")
    @Action(input = "http://ModelLayer.company.com/ISockModel/updateSockRequest", output = "http://ModelLayer.company.com/ISockModel/updateSockResponse")
    public SockData updateSock(
        @WebParam(name = "arg0", targetNamespace = "")
        SockData arg0);

    /**
     * 
     * @param arg0
     */
    @WebMethod
    @RequestWrapper(localName = "addSock", targetNamespace = "http://ModelLayer.company.com/", className = "com.company.modellayer.AddSock")
    @ResponseWrapper(localName = "addSockResponse", targetNamespace = "http://ModelLayer.company.com/", className = "com.company.modellayer.AddSockResponse")
    @Action(input = "http://ModelLayer.company.com/ISockModel/addSockRequest", output = "http://ModelLayer.company.com/ISockModel/addSockResponse")
    public void addSock(
        @WebParam(name = "arg0", targetNamespace = "")
        SockData arg0);

    /**
     * 
     * @param arg0
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "deleteSock", targetNamespace = "http://ModelLayer.company.com/", className = "com.company.modellayer.DeleteSock")
    @ResponseWrapper(localName = "deleteSockResponse", targetNamespace = "http://ModelLayer.company.com/", className = "com.company.modellayer.DeleteSockResponse")
    @Action(input = "http://ModelLayer.company.com/ISockModel/deleteSockRequest", output = "http://ModelLayer.company.com/ISockModel/deleteSockResponse")
    public boolean deleteSock(
        @WebParam(name = "arg0", targetNamespace = "")
        int arg0);

    /**
     * 
     * @param arg0
     * @return
     *     returns com.company.modellayer.SockData
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getSockById", targetNamespace = "http://ModelLayer.company.com/", className = "com.company.modellayer.GetSockById")
    @ResponseWrapper(localName = "getSockByIdResponse", targetNamespace = "http://ModelLayer.company.com/", className = "com.company.modellayer.GetSockByIdResponse")
    @Action(input = "http://ModelLayer.company.com/ISockModel/getSockByIdRequest", output = "http://ModelLayer.company.com/ISockModel/getSockByIdResponse")
    public SockData getSockById(
        @WebParam(name = "arg0", targetNamespace = "")
        int arg0);

    /**
     * 
     * @param arg1
     * @param arg0
     * @return
     *     returns java.util.List<com.company.modellayer.SockData>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "findBy", targetNamespace = "http://ModelLayer.company.com/", className = "com.company.modellayer.FindBy")
    @ResponseWrapper(localName = "findByResponse", targetNamespace = "http://ModelLayer.company.com/", className = "com.company.modellayer.FindByResponse")
    @Action(input = "http://ModelLayer.company.com/ISockModel/findByRequest", output = "http://ModelLayer.company.com/ISockModel/findByResponse")
    public List<SockData> findBy(
        @WebParam(name = "arg0", targetNamespace = "")
        Object arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        String arg1);

    /**
     * 
     * @return
     *     returns java.util.List<com.company.modellayer.SockData>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getAllSocks", targetNamespace = "http://ModelLayer.company.com/", className = "com.company.modellayer.GetAllSocks")
    @ResponseWrapper(localName = "getAllSocksResponse", targetNamespace = "http://ModelLayer.company.com/", className = "com.company.modellayer.GetAllSocksResponse")
    @Action(input = "http://ModelLayer.company.com/ISockModel/getAllSocksRequest", output = "http://ModelLayer.company.com/ISockModel/getAllSocksResponse")
    public List<SockData> getAllSocks();

}
